﻿@using Microsoft.AspNetCore.Identity;
@using TopNews.Core.DTOs.Post;
@using TopNews.Core.DTOs.User;
@using TopNews.Core.Entities.User;

@inject UserManager<AppUser> UserManager

@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@using X.PagedList;
@model IPagedList<PostDto>

@{
    var user = await UserManager.GetUserAsync(User);
}
@{
    <!-- DataTables -->
    <link rel="stylesheet" href="~/assets/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="~/assets/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
    <link rel="stylesheet" href="~/assets/plugins/datatables-buttons/css/buttons.bootstrap4.min.css">
}
@{
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}
<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>All posts</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="#">Home</a></li>
                        <li class="breadcrumb-item active">post</li>
                    </ol>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">Post list with minimal information</h3>
                        </div>
                        <!-- /.card-header -->
                        <div class="card-body">
                            <table id="example2" class="table table-bordered table-hover">
                                <thead>
                                    <tr>
                                        <th>Id</th>
                                        <th>Title</th>
                                        <th>Description</th>
                                        <th>PublicationDateTime</th>
                                        <th>NameImage</th>
                                        @if (@User.IsInRole("Administrator"))
                                        {
                                            <th>Edit</th>
                                            <th>Delete</th>
                                        }

                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>@item.Id</td>
                                            <td>@item.Title</td>
                                            <td>@item.Description</td>
                                            <td>@item.PublishDate</td>
                                            <td>@item.ImagePath</td>
                                            @if (@User.IsInRole("Administrator"))
                                            {
                                                <td><a asp-controller="Post" asp-action="Update" asp-route-id="@item.Id" class="btn btn-block btn-warning btn-sm">Edit</a></td>
                                                <td><a asp-controller="Post" asp-action="Delete" asp-route-id="@item.Id" class="btn btn-block btn-danger btn-sm">Delete</a></td>
                                            }
                                        </tr>
                                    }
                                    <div class="dataTables_paginate paging_simple_numbers" id="example2_paginate">
                                        @Html.PagedListPager(Model, page => Url.Action("index", new { page = page }), new PagedListRenderOptions()
                                        {
                                        ActiveLiElementClass = "active",
                                        PageClasses = new[]{ "page-link"},
                                        LiElementClasses=new[] { "page-item" },
                                        UlElementClasses = new[] { "pagination","justify-content-center", "mt-3" },
                                        LinkToNextPageFormat = "Next",
                                        LinkToPreviousPageFormat = "Prev",
                                        MaximumPageNumbersToDisplay = 3,
                                        DisplayLinkToPreviousPage = PagedListDisplayMode.Never,
                                        DisplayLinkToNextPage = PagedListDisplayMode.Never
                                        })
                                    </div>
                                </tbody>
                            </table>
                        </div>
                        <!-- /.card-body -->
                    </div>
                    <!-- /.card -->
                </div>
            </div>
            <!-- /.col -->
            <!-- /.row -->
        </div>
        <!-- /.container-fluid -->
    </section>
</div>
<!-- /.content -->